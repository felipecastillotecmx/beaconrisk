name: CI — Tests & SonarQube

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  tests:
    name: Unit tests & coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run unit tests (exclude integration) with coverage
        run: |
          pytest -m "not integration"
      - name: Enforce coverage >= 80%
        run: |
          python .github/scripts/coverage_gate.py 80 coverage.xml
      - name: Upload coverage.xml as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  it-mysql:
    name: Integration tests (MySQL)
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: cnpdb
          MYSQL_USER: cnp_user
          MYSQL_PASSWORD: cnp_pass
        ports:
          - "3306:3306"
        options: >-
          --health-cmd="mysqladmin ping -prootpass"
          --health-interval=10s --health-timeout=5s --health-retries=15
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Wait for MySQL and init schema
        run: |
          sudo apt-get update && sudo apt-get install -y mysql-client
          for i in {1..30}; do
            mysql -h 127.0.0.1 -uroot -prootpass -e "SELECT 1" && break
            sleep 2
          done
          mysql -h 127.0.0.1 -uroot -prootpass < db/init.sql
          # Forzar plugin clásico para el usuario de app (opcional si ya agregaste cryptography)
          mysql -h 127.0.0.1 -uroot -prootpass -e "ALTER USER 'cnp_user'@'%' IDENTIFIED WITH mysql_native_password BY 'cnp_pass'; FLUSH PRIVILEGES;"
      - name: Run integration tests
        env:
          MYSQL_HOST: 127.0.0.1
          MYSQL_PORT: 3306
          MYSQL_USER: cnp_user
          MYSQL_PASSWORD: cnp_pass
          MYSQL_DB: cnpdb
          SAFE_APPROVE: "1"
        run: |
          pytest -m "integration" -q

  sonarqube:
    name: Build and analyze
    runs-on: ubuntu-latest
    needs: [tests, it-mysql]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}